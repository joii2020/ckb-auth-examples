CC := clang-16
LD := ld.lld-16
OBJCOPY := llvm-objcopy-16
AR := llvm-ar-16
RANLIB := llvm-ranlib-16
LLVM_CFLAGS := --target=riscv64 -march=rv64imc_zba_zbb_zbc_zbs \
		-Wno-error=unused-but-set-variable \
		-Wno-error=unused-command-line-argument \
		-Wno-error=bitwise-instead-of-logical

CFLAGS := $(LLVM_CFLAGS) $(GCC_CFLAGS) \
		-O3 -g -Wall -Werror -Wno-nonnull -Wno-unused-function \
		-fno-builtin-printf -fno-builtin-memcmp \
		-nostdinc -nostdlib -fvisibility=hidden -fdata-sections -ffunction-sections \
		-I ckb-auth/deps/secp256k1/src -I ckb-auth/deps/secp256k1 \
		-I ckb-auth/deps/ckb-c-std-lib -I ckb-auth/deps/ckb-c-std-lib/libc \
		-I ckb-auth/deps/ckb-c-std-lib/molecule \
		-I ckb-auth/c \
		-I ckb-auth/build
LDFLAGS := -Wl,-static -Wl,--gc-sections
AUTH_CFLAGS=$(subst ckb-c-std-lib,ckb-c-stdlib-2023,$(CFLAGS)) -Wno-array-bounds

all: ckb-auth-all build/auth_c_example

ckb-auth-all:
	mkdir -p build
	cd ckb-auth && make -f Makefile.clang all
	cp ckb-auth/build/auth build/
	cp ckb-auth/build/secp256k1_data_20210801 build/

build/auth_c_example: auth_c_example.c ckb-auth/c/ckb_auth.h
	$(CC) $(AUTH_CFLAGS) $(LDFLAGS) -o $@ auth_c_example.c
	$(OBJCOPY) --only-keep-debug $@ $@.debug
	$(OBJCOPY) --strip-debug --strip-all $@

clean:
	rm -rf build/*
	cd ckb-auth && make -f Makefile.clang clean
